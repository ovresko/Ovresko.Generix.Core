<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:Tx="http://unclassified.software/source/txtranslation"
    xmlns:currency="clr-namespace:CurrencyTextBoxControl;assembly=CurrencyTextBoxControl"
       xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
          xmlns:s="https://github.com/canton7/Stylet" 
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Ovresko.Generix.Core.Pages.Template"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" 
    x:Class="Ovresko.Generix.Core.Pages.Template.DetailView"
             mc:Ignorable="d"  
    KeyDown="{s:Action UserControl_KeyDown}" d:DesignHeight="650"  >
    <UserControl.Resources>
        <s:BoolToVisibilityConverter x:Key="boolToVisConverter" TrueVisibility="Visible" FalseVisibility="Collapsed"/>
        <s:BoolToVisibilityConverter x:Key="InvboolToVisConverter" TrueVisibility="Hidden" FalseVisibility="Visible"/>
        <s:BoolToVisibilityConverter x:Key="hideWhenTrue" TrueVisibility="Visible" FalseVisibility="Hidden"/>

    </UserControl.Resources>

    <DockPanel   Background="Transparent" VerticalAlignment="Stretch" Margin="0 0 0 0"  HorizontalAlignment="Stretch">



        <materialDesign:Card  UniformCornerRadius="10" HorizontalAlignment="Left"  FlowDirection="{Binding GetFlowDirection}"  
                  Margin="10 5" Width="940" Foreground="#263238" Background="#eceff1" Padding="-3" materialDesign:ShadowAssist.ShadowDepth="Depth0"
                DockPanel.Dock="Top"  >
            <DockPanel  >
                <StackPanel DockPanel.Dock="Left" Margin="10 10" Orientation="Horizontal">
                    <materialDesign:PackIcon VerticalAlignment="Center" Margin="5"   Height="25" Width="25" Kind="{Binding model.IconName}"/>
                    <TextBlock Text="{Binding CollectionTitle,  Mode=OneWay ,  UpdateSourceTrigger=PropertyChanged}" 
                       FontWeight="SemiBold" Width="auto" Margin="0 0 20 0"  
                          FontSize="20"   VerticalAlignment="Center" >

                    </TextBlock>
                    <WrapPanel   Orientation="Horizontal"   VerticalAlignment="Center" >



                        <materialDesign:Chip  Margin="3">
                            <TextBox  Text="{Binding model.NameSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              BorderThickness="0" Width="auto" Height="auto" />
                        </materialDesign:Chip>
                        <materialDesign:Chip   Margin="3">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Circle" Width="10" 
                                             Foreground="{Binding model.StatusColor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                             VerticalAlignment="Center" />
                                <Label Content="{Binding model.Status, Mode=OneWay}" FontWeight="Bold" 
                           Foreground="{Binding model.StatusColor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           FontSize="11" VerticalAlignment="Center" Padding="5,0,0,0"  />
                            </StackPanel>
                        </materialDesign:Chip>

                        <materialDesign:Chip Margin="3" Visibility="{Binding model.Submitable ,Converter={StaticResource boolToVisConverter}}">
                            <TextBlock VerticalAlignment="Center" 
                               Visibility="{Binding model.Submitable ,Converter={StaticResource boolToVisConverter}}"
                                 Text="{Binding model.Version, Mode=OneWay,StringFormat='Version: {0}'}" Padding="10 0 0 0"/>
                        </materialDesign:Chip>



                    </WrapPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left"  Margin="0"  >

                    <!--<materialDesign:Card Margin="0 4  5 4" Height="40"  Visibility="{Binding SaveVisible ,Converter={StaticResource boolToVisConverter}}"
                             Custom:VisibilityHelper.IsVisible="{Binding opsVisible, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged}" materialDesign:ShadowAssist.ShadowDepth="Depth1"
                            Background="White"  BorderThickness="1" BorderBrush="#000051" RenderTransformOrigin="0.5,0.5" Width="194" >
                        
                        <Menu  IsMainMenu="True"  HorizontalAlignment="Stretch"  Background="Transparent"   BorderBrush="Transparent"  BorderThickness="0" Padding="5 0">
                            <MenuItem Margin="0"     Width="350"
                                  ToolTip="Opérations supplémentaires" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" FontSize="12" Padding="5">
                                <MenuItem.Header>
                                    <TextBlock Background="Transparent" Text="{Tx:T Opérations}"  Margin="-15 0 0 0" FontSize="12"/>
                                </MenuItem.Header>
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="MenuDown"   Padding="0" Margin="2 0 -5 -5" />
                                </MenuItem.Icon>
                            </MenuItem>

                        </Menu>
                    </materialDesign:Card>-->

                   


                </StackPanel>


                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">

                    <Button Command="{s:Action Save}"  BorderThickness="0"
                              Visibility="{Binding SaveVisible ,Converter={StaticResource boolToVisConverter}}"
                            x:Name="button_Copy" Focusable="False"
                        FontWeight="Bold"   Width="auto"
                    Content="{Binding btnName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                     Background="{Binding btnColor}" HorizontalAlignment="Left"  Margin="2" 
                       
                         />
                    <Button Command="{s:Action Close}" 
                        Margin="10 0"
                        Custom:VisibilityHelper.IsVisible="{Binding fermerVisible, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged}"
                    x:Name="button_Copy1" Focusable="False"  Style="{StaticResource SecondaryButton}"
                    
                   HorizontalAlignment="Left"  
                   
                    FontWeight="Normal" Width="53"    >
                        <materialDesign:PackIcon Kind="Close"/>
                    </Button>
                    <materialDesign:PopupBox  HorizontalAlignment="Right" Margin="5 0"  Padding="2 0 2 0">
                        <ContentControl Content="{Binding linkButtonsOps, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                            x:Name="opsWrap" Height="auto" Margin="0 0"   HorizontalAlignment="Left" Width="auto"
                                
                              />
                    </materialDesign:PopupBox>

                </StackPanel>


            </DockPanel>
            <!--<Grid FlowDirection="{Binding GetFlowDirection}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

              


                -->
            <!--the request to open the dialog will bubble up to the top-most DialogHost, but we can used the attached property based event to handle the response -->
            <!--
                <StackPanel FlowDirection="{Binding GetFlowDirection}" Orientation="Vertical" Margin="0 0" HorizontalAlignment="Left">

                    -->
            <!--<ContentControl VerticalAlignment="Center" Content="{Binding opeartionButtons, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                              MinHeight="29" Height="auto"
                          DockPanel.Dock="Top" Margin="0 0"
                      
                           />-->
            <!--
                  
                </StackPanel>

            </Grid>-->

        </materialDesign:Card>

        <ProgressBar  Width="950"  HorizontalAlignment="Left" Visibility="{Binding ProgressValueVisible ,Converter={StaticResource hideWhenTrue}}" 
                    IsIndeterminate="True"   DockPanel.Dock="Top" />


        <Grid HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"  Margin="0"
                  DockPanel.Dock="Bottom"       Background="Transparent"
               Height="20"
               >

            <StackPanel VerticalAlignment="Center"   Orientation="Horizontal">
                <ToggleButton   IsChecked="{Binding CollapseAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock VerticalAlignment="Center" Text="{Tx:T Ouvrir.touts}"  />
                <!--<CheckBox VerticalAlignment="Center" HorizontalAlignment="Left"
                          IsChecked="{Binding model.isHandled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Est traité" Width="81" />-->
                <StackPanel Orientation="Horizontal" Margin="10,0">
                    <Separator Foreground="Black" Background="Black" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>
                <Label Content="{Tx:T Crée le}" VerticalAlignment="Center"  Padding="0" />
                <xc:DateTimePicker  VerticalAlignment="Center" Padding="0" Margin="10 0" FontSize="10" Format="ShortDate"
                             Value="{Binding model.AddedAtUtc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                <Label  ContentStringFormat="# {0:N}" 
                       VerticalAlignment="Center" Padding="0" Margin="0"
                       Content="{Binding GlobalMsg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                <Label VerticalAlignment="Center" Content="{Binding model.CreatedByName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Text="{Binding model.Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Padding="0" Margin="0 " FontSize="10" IsReadOnly="True"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Visibility="{Binding SaveVisible ,Converter={StaticResource boolToVisConverter}}">
                <Button HorizontalAlignment="Right" Style="{StaticResource LinkButton}"
                     Command="{s:Action ShowProperties}"   Margin="5 0" Foreground="Gray"
                    Content="{Tx:T afficher.les.champs}" BorderBrush="{x:Null}" 
                    Background="{x:Null}" Height="Auto"  ></Button>

                <Button HorizontalAlignment="Right"
                    Command="{s:Action Dupliquer}"   Foreground="Gray"
                    Style="{StaticResource LinkButton}" Margin="5 0"
                    Content="{Tx:T Dupliquer}" BorderBrush="{x:Null}" 
                    Background="{x:Null}" Height="Auto" ></Button>

                <Button HorizontalAlignment="Right"
                    Command="{s:Action CreerNouveau}" Margin="5 0"  
                   Style="{StaticResource LinkButton}" Foreground="Gray"
                    Content="{Tx:T créer.nouveau}" BorderBrush="{x:Null}" 
                    Background="{x:Null}" Height="Auto"  ></Button>
            </StackPanel>

        </Grid>

        <ScrollViewer Panel.ZIndex="-10" Margin="0 0 0 0"   VerticalAlignment="Stretch"  
                        HorizontalAlignment="Stretch"  Padding="0 0">
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Stretch">

                <materialDesign:Snackbar HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" DockPanel.Dock="Top"
                    SnapsToDevicePixels="True" MessageQueue="{Binding MessageQueue,
                    Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Left">
                    <!--<ContentControl Content="{Binding DocImageContent, 
                        Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                            Height="auto"  
                                    HorizontalAlignment="Left"  
                                       Margin="0" />-->
                    <materialDesign:Card UniformCornerRadius="6" Padding="0"
                             Margin="10 2 0 20" materialDesign:ShadowAssist.ShadowEdges="All"
                             materialDesign:ShadowAssist.ShadowDepth="Depth1" materialDesign:ShadowAssist.Darken="False"

                        HorizontalAlignment="Center"  VerticalAlignment="Top" 
                             Background="White"  >
                        <Grid >


                            <ContentControl BorderThickness="0"  
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                            Content="{Binding stackContent, Mode=OneWay,IsAsync=False, UpdateSourceTrigger=PropertyChanged}"
                            Background="White" FontSize="14"
                            BorderBrush="Black" Margin="0"/>


                        </Grid>



                    </materialDesign:Card>

                    <StackPanel Margin="10 10">
                        <Border CornerRadius="8" BorderThickness="1" Background="WhiteSmoke" BorderBrush="#eceff1">
                            <ListBox  ItemsSource="{Binding InfoCards}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" >
                                        <Setter Property="Cursor" Value="Hand"/> 
                                    </Style>
                                    <!--<DataTemplate>
                                    <StackPanel>
                                        <Button Click="{Binding Path=Click}" Style="{StaticResource MaterialDesignFlatButton}" Padding="2" Height="42" Content="{Binding Path=Header}">

                                        </Button>
                                    </StackPanel>
                                </DataTemplate>-->
                                </ListBox.ItemContainerStyle>
                            </ListBox>
 
                        </Border>
                       
                            <ContentControl Margin="0 0 0 0"  Content="{Binding DocImageContent, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Border CornerRadius="8" BorderThickness="1" Margin="0 10" Background="White" BorderBrush="#F5F5F5">
                            <ListBox  ItemsSource="{Binding opeartionButtons}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}" >
                                    <Setter Property="Cursor" Value="Hand"/>
                                 </Style>
                                <!--<DataTemplate>
                                    <StackPanel>
                                        <Button Click="{Binding Path=Click}" Style="{StaticResource MaterialDesignFlatButton}" Padding="2" Height="42" Content="{Binding Path=Header}">

                                        </Button>
                                    </StackPanel>
                                </DataTemplate>-->
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        </Border>
                        <Border  BorderThickness="1" Width="300" CornerRadius="8" Background="White" Padding="30 10 0 20" BorderBrush="#F5F5F5">
                            <ContentControl    Foreground="White" Content="{Binding linkButtons, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </StackPanel>
                </StackPanel>

            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
